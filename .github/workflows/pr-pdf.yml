# Author: enwask
# This workflow builds the PDF for pull requests and comments a link to the artifact on the PR.
name: Build PDF on PR

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-pdf:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pdflatex
        run: sudo apt-get update && sudo apt-get install texlive-latex-base texlive-latex-recommended texlive-latex-extra

      - name: Build PDF
        run: make hackpack


      - name: Upload PDF to 0x0.st
        id: upload_pdf
        run: |
          url=$(curl -F "file=@hackpack.pdf" https://0x0.st)
          echo "pdf_url=$url" >> $GITHUB_OUTPUT

      - name: Delete old PDF comment and post new one
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const pdfUrl = process.env.PDF_URL || '${{ steps.upload_pdf.outputs.pdf_url }}';
            const body = `✅ PDF built for this PR! [View hackpack.pdf](${pdfUrl})`;

            // Find previous bot comments with the same text pattern
            const comments = await github.rest.issues.listComments({
              issue_number: pr.number,
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            for (const comment of comments.data) {
              if (comment.body && comment.body.includes('✅ PDF built for this PR!')) {
                await github.rest.issues.deleteComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: comment.id
                });
              }
            }

            // Post new comment
            await github.rest.issues.createComment({
              issue_number: pr.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });
